#!/usr/bin/perl
use strict;
use Flexget::Parse;
use Flexget::PatternMatch;
use Media::Sort;
use Data::Dumper::Concise;
use Getopt::Long;

my $l = shift // "/mnt/shiva/.flexget.log";
open(my $fh, '<', $l) or die($!);
my @r = <$fh>;
close($l);

my $rel = patternmatch('none', flexparse(@r));

our $style = 256;
GetOptions(
  color  => sub { $style = 256; },
  dzen   => sub { $style = 'dzen'; },
  none   => sub { $style = 'none'; },
);

my $rel = patternmatch($style, flexparse(@r));

my %wanted = (
  name  => {
    'gyro'                      => "\e[38;5;197m\e[1m",
    'Fighter'                   => "\e[48;5;100m$1\e[0m",
    'pilot'                     => "\e[38;5;3m",
    'fringe'                    => "\e[48;5;160m",
    '^house'                    => "\e[38;5;160m\e[1m",
    '(?:do(c|k)ument(a|ä)ry?)'  => "\e[38;5;106m",
    'Uppdrag\.Granskning'       => "\e[38;5;214m",
    'Lite\.Sallskap'            => "\e[38;5;208m\e[1m",
  },
  info  => {
    'HDTV'      => "\e[3m\e[38;5;33m",
    'PDTV'      => "\e[3m\e[38;5;45m",
    'S01E01'    => "\e[38;5;106m",
    '720p'      => "\e[38;5;196m",
    'E01'       => "\e[38;5;191m",
    'S01'       => "\e[38;5;221m",
  },
  group => {
    '.+UPE'     => "\e[1m\e[38;5;148m",
    '.+PsyCZ.*' => "\e[1m\e[38;5;148m",
    'LOL'       => "\e[38;5;130m",
    'FRAY'      => "\e[38;5;240m",
    '.+SHELTER' => "\e[1m",
  },
);

sub talk {
  my $h = shift;
  return if !$h;

  my $output = undef;
  my $next   = 0;

  my(undef,undef,undef,$mday,$mon,$year) = localtime(time);
  $year += 1900;
  $mon  += 1;
  printf("%55s \e[1m\e[4m%d-%02d-%02d\e[0m\n", 'Released',$year, $mon, $mday);
  for my $n(sort{ $b <=> $a } keys(%{$h})) {
    for my $rel(keys(%{$h->{$n}})) {
      $output = sprintf("%63.63s", $rel);

      for my $query(keys(%{$wanted{name}})) {
        $output =~ s/($query)/$wanted{name}{$query}$1\e[0m/gi;
      }
      for my $qinfo(keys(%{$wanted{info}})) {
        $output =~ s/($qinfo)/$wanted{info}{$qinfo}$1\e[0m/gi;
      }

      for my $group(keys(%{$wanted{group}})) {
        $output =~ s/($group)/$wanted{group}{$group}$1\e[0m/gi;
      }

      my $n_clr = "\e[1m\e[48;5;236m\e[38;5;244m";
      printf("$n_clr%02d\e[0m %s\e[38;5;236m▕\e[38;5;247m|\e[38;5;236m▏\e[0m%s\n",
        $n, ,$output,$h->{$n}{$rel}, $output
      );
    }
  }
}
talk($rel);
